name: Terraform CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
     
    defaults:
     run:
       working-directory: ./tf 


    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.0

      # Step 3: Configure AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 # Or you can use ${{ secrets.AWS_REGION }} if set in secrets

      # Step 4: Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Step 5: Validate Terraform syntax
      - name: Terraform Validate
        run: terraform validate

      # Step 6: Terraform Format Check
      - name: Terraform Format
        run: terraform fmt -check

      # Step 7: Terraform Plan
      - name: Terraform Plan
        run: terraform plan

      # Optional: Step 8: Apply (controlled, often manual step)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve


      - name: Get Terraform Outputs
        id: outputs
        run: |
          echo "::set-output name=ips::$(terraform output -json instance_public_ips)"
          echo "::set-output name=dynamodb_table_name::$(terraform output -raw dynamodb_table_name)"
          echo "::set-output name=sqs_queue_name::$(terraform output -raw sqs_queue_name)"
          echo "::set-output name=s3_bucket_name::$(terraform output -raw s3_bucket_name)"

    outputs:
      ips: ${{ steps.outputs.outputs.ips }}
      dynamodb_table_name: ${{ steps.outputs.outputs.dynamodb_table_name }}
      sqs_queue_name: ${{ steps.outputs.outputs.sqs_queue_name }}
      s3_bucket_name: ${{ steps.outputs.outputs.s3_bucket_name }}
