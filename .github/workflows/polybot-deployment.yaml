name: Polybot Microservice Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:

      - name: Login to docker
        env: 
          DOCKER_USR: ${{secrets.DOCKER_USR}}
          DOCKER_PWD: ${{secrets.DOCKER_PWD}}
        run: echo "$DOCKER_PWD" | docker login --username $DOCKER_USR --password-stdin

      - name: Checkout the repo code
        uses: actions/checkout@v3
        
      - name: Docker Build
        run: docker build -t polybot polybotService/polybot

      - name: Docker Tag
        run: docker tag polybot keretdodor/polybot
      
      - name: Docker Push
        run: docker push keretdodor/polybot:latest

  Deploy:
    runs-on: ubuntu-latest
    needs:
      - Build
    
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v3

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }} 
          mask-aws-account-id: 'no'
      
      - name: AWS outputs
        id: aws_outputs
        run: |
          # First, let's list all available resources for debugging
          echo "Listing available DynamoDB tables:"
          aws dynamodb list-tables
          
          echo "Listing EC2 instances:"
          aws ec2 describe-instances --query 'Reservations[].Instances[].{ID:InstanceId,Name:Tags[?Key==`Name`].Value|[0],IP:PublicIpAddress}'
          
          # Get SQS Queue URL (this one works, keeping it as is)
          sqs_url=$(aws sqs list-queues | jq -r '.QueueUrls[]' | while read queue_url; do
            aws sqs list-queue-tags --queue-url "$queue_url" | \
            jq -r --arg url "$queue_url" 'select(.Tags.Name == "polybot") | $url'
          done)
          echo "Found SQS URL: $sqs_url"
      
          # Get S3 Bucket (this one works, keeping it as is)
          s3_bucket=$(aws resourcegroupstaggingapi get-resources \
            --tag-filters Key=Name,Values=polybot \
            --resource-type-filters s3 \
            --output json | jq -r '.ResourceTagMappingList[].ResourceARN | select(contains("s3")) | split(":")[5]')
          echo "Found S3 bucket: $s3_bucket"
      
          # Modified DynamoDB table lookup
          echo "Looking for DynamoDB table with tag Name=polybot"
          dynamodb_table=$(aws dynamodb list-tables | jq -r '.TableNames[]' | while read table; do
            echo "Checking table: $table"
            aws dynamodb describe-table --table-name "$table" | \
            jq -r --arg table "$table" '.Table.TableName | select(. != null)'
          done)
          echo "Found DynamoDB table: $dynamodb_table"
      
          # Modified EC2 instance lookup
          echo "Looking for EC2 instance with tag Name=polybot"
          ec2_ip=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=polybot" \
            --query 'Reservations[].Instances[].PublicIpAddress' \
            --output text)
          echo "Found EC2 IP: $ec2_ip"
      
          # Export variables
          echo "sqs_url=${sqs_url}" >> $GITHUB_ENV
          echo "s3_bucket=${s3_bucket}" >> $GITHUB_ENV
          echo "dynamodb_table=${dynamodb_table}" >> $GITHUB_ENV
          echo "ec2_ip=${ec2_ip}" >> $GITHUB_ENV
      
      - name: AWS outputs debugging
        run: |
          echo "S3 Bucket for 'polybot': ${s3_bucket}"
          echo "DynamoDB Table Name for 'polybot': ${dynamodb_table}"
          echo "SQS URL for 'polybot': ${sqs_url}"
          echo "EC2 IP for 'polybot': ${ec2_ip}"
      
      - name: Ansible's Inventory File Creation
        working-directory: ./infrastructure/ansible
        run: |
          echo "[polybot]" > inventory.ini
          if [ -n "${ec2_ip}" ]; then
            echo "${ec2_ip}" >> inventory.ini
          else
            echo "No EC2 instance found with tag Name=polybot"
            exit 1
          fi
          cat inventory.ini
            - name: Key File Creation
              working-directory: ./infrastructure/ansible
              run: |
                  echo '${{ secrets.PRIVATE_KEY }}' > private_key.pem
                  chmod 600 private_key.pem
          
      - name: Run Ansible Playbook
        working-directory: ./infrastructure/ansible
        shell: bash
        run: |
          ansible-playbook -i inventory.ini playbook.yaml --private-key private_key.pem \
          --extra-vars "dynamodb_table_name=${dynamodb_table} \
          sqs_queue_url=${sqs_url} \
          bucket_name=${s3_bucket} \
          alias_record=${{vars.ALIAS_RECORD}} \
          aws_region=${{ vars.AWS_REGION }}"
          


            
     
