name: Polybot Microservice Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:

      - name: Login to docker
        env: 
          DOCKER_USR: ${{secrets.DOCKER_USR}}
          DOCKER_PWD: ${{secrets.DOCKER_PWD}}
        run: echo "$DOCKER_PWD" | docker login --username $DOCKER_USR --password-stdin

      - name: Checkout the repo code
        uses: actions/checkout@v3
        
      - name: Docker Build
        run: docker build -t polybot polybotService/polybot

      - name: Docker Tag
        run: docker tag polybot keretdodor/polybot
      
      - name: Docker Push
        run: docker push keretdodor/polybot:latest

  Deploy:
    runs-on: ubuntu-latest
    needs:
      - Build
    
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v3

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }} 
          mask-aws-account-id: 'no'

      - name: AWS outputs
        id: aws_outputs
        run: |
          # Get SQS Queue URL
          sqs_url=$(aws sqs list-queues | jq -r '.QueueUrls[]' | while read queue_url; do
            aws sqs list-queue-tags --queue-url "$queue_url" | \
            jq -r --arg url "$queue_url" 'select(.Tags.Name == "polybot") | $url'
          done)

          # Get S3 Bucket
          s3_bucket=$(aws resourcegroupstaggingapi get-resources \
            --tag-filters Key=Name,Values=polybot \
            --resource-type-filters s3 \
            --output json | grep -oP '(?<=s3:::)[^"]*')

          # Get DynamoDB Table Name
          dynamodb_table=$(aws dynamodb list-tables | jq -r '.TableNames[]' | while read table; do
            aws dynamodb list-tags-of-resource \
            --resource-arn "arn:aws:dynamodb:$(aws configure get region):$(aws sts get-caller-identity --query Account --output text):table/$table" | \
            jq -r --arg table "$table" 'select(.Tags[] | select(.Key=="Name" and .Value=="polybot")) | $table'
          done)
      - name: AWS outputs
        id: aws_outputs
        run: |
          echo "S3 Bucket for 'polybot': $s3_bucket" \
          echo "DynamoDB Table Name for 'polybot': $dynamodb_table" \ 
          echo "SQS URL for 'polybot': $sqs_url" 


      - name: Ansible's Inventory File Creation\
        working-directory: ./infrastructure/ansible
        run: |
          echo "[polybot]" > inventory.ini
          eaws ec2 describe-instances | jq -r '.Reservations[].Instances[] | select(contains({Tags: [{Key: "Name"}, {Value: "polybot"}]}) | not) | .PublicIpAddress' | \ 
          grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' >> inventory.ini 
          cat inventory.ini
        shell: bash

      - name: Key File Creation
        working-directory: ./infrastructure/ansible
        run: |
            echo '${{ secrets.PRIVATE_KEY }}' > private_key.pem
            chmod 600 private_key.pem
    
      - name: Run Ansible Playbook
        working-directory: ./infrastructure/ansible
        shell: bash
        run: |
          ansible-playbook -i inventory.ini playbook.yaml --private-key private_key.pem \
          --extra-vars "dynamodb_table_name=$dynamodb_table \
          sqs_queue_url=$sqs_url \
          bucket_name=s3_bucket\
          alias_record=${{vars.ALIAS_RECORD}} \
          aws_region=${{ vars.AWS_REGION }}"

          


            
     
